{
  "resourceType" : "Library",
  "id" : "WHOCommon",
  "text" : {
    "status" : "extensions",
    "div" : "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n  <table class=\"narrative-table\">\n    <tbody>\n<tr>\n\n\n<th colspan=\"2\" scope=\"row\" class=\"row-header\">Metadata</th>\n\n\n</tr>\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Title</th>\n\n\n<td class=\"content-container\">WHO Common</td>\n</tr>\n\n\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Version</th>\n\n\n<td class=\"content-container\">0.3.0</td>\n</tr>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Jurisdiction</th>\n\n\n<td class=\"content-container\"><span title=\"Codes:{http://unstats.un.org/unsd/methods/m49/m49.htm 001}\">Global (Whole world)</span></td>\n</tr>\n\n\n\n\n\n\n\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Steward (Publisher)</th>\n\n\n<td class=\"content-container\">World Health Organization (WHO)</td>\n</tr>\n\n\n\n\n\n\n\n\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Description</th>\n\n\n<td class=\"content-container\"><div><p>Defines common logic and functions usable across all WHO SMART Guideline content</p>\n</div></td>\n</tr>\n\n\n\n\n\n\n<tr>\n\n\n<th scope=\"row\" class=\"row-header\">Type</th>\n\n\n<td class=\"content-container\"><span title=\"Codes:{http://terminology.hl7.org/CodeSystem/library-type logic-library}\">Logic Library</span></td>\n</tr>\n\n\n<tr>\n  \n\n<th scope=\"row\" class=\"row-header\">Parameter</th>\n\n\n  <td class=\"content-container\">\n    \n    <em>Name</em>: Patient\n    \n    \n    <br/>\n    \n    \n    <em>Use</em>: Out\n    \n    \n    <br/>\n    \n    \n    <em>Min Cardinality</em>: 0\n    \n    \n    <br/>\n    \n    \n    <em>Max Cardinality</em>: 1\n    \n    \n    <br/>\n    \n    \n    <em>Type</em>: Patient\n    \n  </td>\n</tr>\n\n\n<tr>\n  <th scope=\"row\" class=\"row-header\">Data Requirement</th>\n  <td class=\"content-container\">\n    <em>Type</em>: Patient\n    <br/>\n  \n    <em>Profile(s)</em>: \n  \n    <a href=\"http://hl7.org/fhir/R4/patient.html\">Patient</a>\n    <br/>        \n  \n   \n   \n   \n  </td>\n</tr>\n\n\n  <tr>\n\n\n<th colspan=\"2\" scope=\"row\" class=\"row-header\">Library Content</th>\n\n\n</tr>\n  \n    \n    <tr>\n      <th scope=\"row\" class=\"row-header\">CQL Content</th>\n      <td>\n        <pre style=\"border: none;\" class=\"content-container highlight language-cql\"><code class=\"language-cql\">library WHOCommon\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1'\r\n\r\ninclude FHIRCommon called FC\r\n\r\ncontext Patient\r\n\r\ndefine function Official(identifiers List&lt;Identifier&gt;):\r\n  singleton from (identifiers I where I.use = 'official')\r\n\r\ndefine function Official(addresses List&lt;Address&gt;):\r\n  singleton from (addresses A where A.use = 'official')\r\n\r\ndefine function Official(names List&lt;HumanName&gt;):\r\n  singleton from (names N where N.use = 'official')\r\n\r\ndefine function Mobile(contactPoints List&lt;ContactPoint&gt;):\r\n  singleton from (contactPoints P where P.use = 'mobile')\r\n\r\ndefine function Only(allergies List&lt;AllergyIntolerance&gt;):\r\n  singleton from allergies\r\n\r\ndefine function Only(appointments List&lt;Appointment&gt;):\r\n  singleton from appointments\r\n\r\ndefine function Only(careplans List&lt;CarePlan&gt;):\r\n  singleton from careplans\r\n\r\ndefine function Only(conditions List&lt;Condition&gt;):\r\n  singleton from conditions\r\n\r\ndefine function Only(encounters List&lt;Encounter&gt;):\r\n  singleton from encounters\r\n\r\ndefine function Only(immunizations List&lt;Immunization&gt;):\r\n  singleton from immunizations\r\n\r\ndefine function Only(medicationrequests List&lt;MedicationRequest&gt;):\r\n  singleton from medicationrequests\r\n\r\ndefine function Only(observations List&lt;Observation&gt;):\r\n  singleton from observations\r\n\r\ndefine function Only(procedures List&lt;Procedure&gt;):\r\n  singleton from procedures\r\n\r\ndefine function Only(serviceRequests List&lt;ServiceRequest&gt;):\r\n  singleton from serviceRequests\r\n\r\ndefine function Only(dosages List&lt;Dosage&gt;):\r\n  singleton from dosages\r\n\r\ndefine function Only(doses List&lt;FHIR.Dosage.DoseAndRate&gt;):\r\n  singleton from doses\r\n\r\ndefine function Earliest(observations List&lt;Observation&gt;):\r\n  First(\r\n    observations O\r\n      sort by issued\r\n  )\r\n\r\ndefine function Latest(observations List&lt;Observation&gt;):\r\n  Last(\r\n    observations O\r\n      sort by issued\r\n  )\r\n\r\ndefine function MostRecent(observations List&lt;Observation&gt;):\r\n  Last(\r\n    observations O\r\n      sort by issued\r\n  )\r\n\r\ndefine function MostRecent(procedures List&lt;Procedure&gt;):\r\n  Last(\r\n    procedures P\r\n      sort by start of FC.ToInterval(performed)\r\n    )\r\n\r\ndefine function Lowest(observations List&lt;Observation&gt;):\r\n  First(\r\n    observations O\r\n      sort by (value as FHIR.Quantity)\r\n  )\r\n\r\ndefine function Highest(observations List&lt;Observation&gt;):\r\n  Last(\r\n    observations O\r\n      sort by (value as FHIR.Quantity)\r\n  )\r\n\r\n/*\r\n@description: Returns any WHO core extensions defined on the given resource with the specified id.\r\n@comment: NOTE: Extensions are not the preferred approach, but are used as a way to access\r\ncontent that is defined by extensions but not yet surfaced in the\r\nCQL model info.\r\n*/\r\ndefine function Extensions(domainResource DomainResource, id String):\r\n  domainResource.extension E\r\n\t  where E.url = ('http://fhir.org/guides/who/core/StructureDefinition/' + id)\r\n\t\treturn E\r\n\r\n/*\r\n@description: Returns the single WHO core extension (if present) on the given resource with the specified id.\r\n@comment: This function uses singleton from to ensure that a run-time exception is thrown if there\r\nis more than one extension on the given resource with the specified id.\r\n*/\r\ndefine function Extension(domainResource DomainResource, id String):\r\n  singleton from &quot;Extensions&quot;(domainResource, id)\r\n\r\n/*\r\n@description: Returns any WHO core extensions defined on the given element with the specified id.\r\n@comment: NOTE: Extensions are not the preferred approach, but are used as a way to access\r\ncontent that is defined by extensions but not yet surfaced in the CQL model info.\r\n*/\r\ndefine function Extensions(element Element, id String):\r\n  element.extension E\r\n\t  where E.url = ('http://fhir.org/guides/who/core/StructureDefinition/' + id)\r\n\t\treturn E\r\n\r\n/*\r\n@description: Returns the single WHO core extension (if present) on the given element with the specified id.\r\n@comment: This function uses singleton from to ensure that a run-time exception is thrown if there\r\nis more than one extension on the given resource with the specified url.\r\n*/\r\ndefine function Extension(element Element, id String):\r\n  singleton from Extensions(element, id)\r\n\r\n/*\r\n@description: Returns any WHO core modifier extensions defined on the given resource with the specified id.\r\n@comment: NOTE: Extensions are not the preferred approach, but are used as a way to access\r\ncontent that is defined by extensions but not yet surfaced in the\r\nCQL model info.\r\n*/\r\ndefine function ModifierExtensions(domainResource DomainResource, id String):\r\n  domainResource.modifierExtension E\r\n\t  where E.url = ('http://fhir.org/guides/who/core/StructureDefinition/' + id)\r\n\t\treturn E\r\n\r\n/*\r\n@description: Returns the single WHO core modifier extension (if present) on the given resource with the specified id.\r\n@comment: This function uses singleton from to ensure that a run-time exception is thrown if there\r\nis more than one extension on the given resource with the specified url.\r\n*/\r\ndefine function ModifierExtension(domainResource DomainResource, id String):\r\n  singleton from ModifierExtensions(domainResource, id)\r\n\r\n/*\r\n@description: Returns any WHO core modifier extensions defined on the given element with the specified id.\r\n@comment: NOTE: Extensions are not the preferred approach, but are used as a way to access\r\ncontent that is defined by extensions but not yet surfaced in the CQL model info.\r\n*/\r\ndefine function ModifierExtensions(element BackboneElement, id String):\r\n  element.modifierExtension E\r\n\t  where E.url = ('http://fhir.org/guides/who/core/StructureDefinition/' + id)\r\n\t\treturn E\r\n\r\n/*\r\n@description: Returns the single WHO core modifier extension (if present) on the given element with the specified id.\r\n@comment: This function uses singleton from to ensure that a run-time exception is thrown if there\r\nis more than one extension on the given resource with the specified url.\r\n*/\r\ndefine function ModifierExtension(element BackboneElement, id String):\r\n  singleton from ModifierExtensions(element, id)\r\n</code></pre>\n      </td>\n    </tr>\n    \n    \n    \n  \n    \n    \n    \n    <tr>\n      <th scope=\"row\" class=\"row-header\">ELM JSON Content</th>\n      <td>\n        <pre style=\"border: none;\" class=\"content-container highlight language-cql\"><code>Encoded data (185032 characters)</code></pre>\n      </td>\n    </tr>\n    \n  \n\n<tr>\n  <th colspan=\"2\" scope=\"row\" class=\"row-header\">Generated using version 0.4.9-cibuild of the sample-content-ig Liquid templates</th>\n</tr>\n\n    </tbody>\n  </table>\n</div>"
  },
  "contained" : [{
    "resourceType" : "Parameters",
    "id" : "options",
    "parameter" : [{
      "name" : "translatorVersion",
      "valueString" : "3.25.0"
    },
    {
      "name" : "option",
      "valueString" : "EnableAnnotations"
    },
    {
      "name" : "option",
      "valueString" : "EnableLocators"
    },
    {
      "name" : "option",
      "valueString" : "DisableListDemotion"
    },
    {
      "name" : "option",
      "valueString" : "DisableListPromotion"
    },
    {
      "name" : "format",
      "valueString" : "JSON"
    },
    {
      "name" : "analyzeDataRequirements",
      "valueBoolean" : false
    },
    {
      "name" : "collapseDataRequirements",
      "valueBoolean" : true
    },
    {
      "name" : "compatibilityLevel",
      "valueString" : "1.4"
    },
    {
      "name" : "enableCqlOnly",
      "valueBoolean" : false
    },
    {
      "name" : "errorLevel",
      "valueString" : "Info"
    },
    {
      "name" : "signatureLevel",
      "valueString" : "None"
    },
    {
      "name" : "validateUnits",
      "valueBoolean" : true
    },
    {
      "name" : "verifyOnly",
      "valueBoolean" : false
    }]
  }],
  "extension" : [{
    "url" : "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference" : {
      "reference" : "Device/cqf-tooling"
    }
  },
  {
    "url" : "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference" : {
      "reference" : "#options"
    }
  }],
  "url" : "http://smart.who.int/anc/Library/WHOCommon",
  "version" : "0.3.0",
  "name" : "WHOCommon",
  "title" : "WHO Common",
  "status" : "active",
  "experimental" : false,
  "type" : {
    "coding" : [{
      "system" : "http://terminology.hl7.org/CodeSystem/library-type",
      "code" : "logic-library"
    }]
  },
  "date" : "2025-07-10T12:22:41+02:00",
  "publisher" : "World Health Organization (WHO)",
  "contact" : [{
    "telecom" : [{
      "system" : "url",
      "value" : "https://www.who.int"
    }]
  }],
  "description" : "Defines common logic and functions usable across all WHO SMART Guideline content",
  "jurisdiction" : [{
    "coding" : [{
      "system" : "http://unstats.un.org/unsd/methods/m49/m49.htm",
      "code" : "001"
    }]
  }],
  "relatedArtifact" : [{
    "type" : "depends-on",
    "display" : "FHIR model information",
    "resource" : "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library FHIRHelpers",
    "resource" : "http://smart.who.int/anc/Library/FHIRHelpers|4.0.1"
  },
  {
    "type" : "depends-on",
    "display" : "Library FC",
    "resource" : "http://smart.who.int/anc/Library/FHIRCommon"
  }],
  "parameter" : [{
    "name" : "Patient",
    "use" : "out",
    "min" : 0,
    "max" : "1",
    "type" : "Patient"
  }],
  "dataRequirement" : [{
    "type" : "Patient",
    "profile" : ["http://hl7.org/fhir/StructureDefinition/Patient"]
  }],
  "content" : [{
    "contentType" : "text/cql",
    "data" : "bGlicmFyeSBXSE9Db21tb24NCg0KdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScNCg0KaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScNCg0KaW5jbHVkZSBGSElSQ29tbW9uIGNhbGxlZCBGQw0KDQpjb250ZXh0IFBhdGllbnQNCg0KZGVmaW5lIGZ1bmN0aW9uIE9mZmljaWFsKGlkZW50aWZpZXJzIExpc3Q8SWRlbnRpZmllcj4pOg0KICBzaW5nbGV0b24gZnJvbSAoaWRlbnRpZmllcnMgSSB3aGVyZSBJLnVzZSA9ICdvZmZpY2lhbCcpDQoNCmRlZmluZSBmdW5jdGlvbiBPZmZpY2lhbChhZGRyZXNzZXMgTGlzdDxBZGRyZXNzPik6DQogIHNpbmdsZXRvbiBmcm9tIChhZGRyZXNzZXMgQSB3aGVyZSBBLnVzZSA9ICdvZmZpY2lhbCcpDQoNCmRlZmluZSBmdW5jdGlvbiBPZmZpY2lhbChuYW1lcyBMaXN0PEh1bWFuTmFtZT4pOg0KICBzaW5nbGV0b24gZnJvbSAobmFtZXMgTiB3aGVyZSBOLnVzZSA9ICdvZmZpY2lhbCcpDQoNCmRlZmluZSBmdW5jdGlvbiBNb2JpbGUoY29udGFjdFBvaW50cyBMaXN0PENvbnRhY3RQb2ludD4pOg0KICBzaW5nbGV0b24gZnJvbSAoY29udGFjdFBvaW50cyBQIHdoZXJlIFAudXNlID0gJ21vYmlsZScpDQoNCmRlZmluZSBmdW5jdGlvbiBPbmx5KGFsbGVyZ2llcyBMaXN0PEFsbGVyZ3lJbnRvbGVyYW5jZT4pOg0KICBzaW5nbGV0b24gZnJvbSBhbGxlcmdpZXMNCg0KZGVmaW5lIGZ1bmN0aW9uIE9ubHkoYXBwb2ludG1lbnRzIExpc3Q8QXBwb2ludG1lbnQ+KToNCiAgc2luZ2xldG9uIGZyb20gYXBwb2ludG1lbnRzDQoNCmRlZmluZSBmdW5jdGlvbiBPbmx5KGNhcmVwbGFucyBMaXN0PENhcmVQbGFuPik6DQogIHNpbmdsZXRvbiBmcm9tIGNhcmVwbGFucw0KDQpkZWZpbmUgZnVuY3Rpb24gT25seShjb25kaXRpb25zIExpc3Q8Q29uZGl0aW9uPik6DQogIHNpbmdsZXRvbiBmcm9tIGNvbmRpdGlvbnMNCg0KZGVmaW5lIGZ1bmN0aW9uIE9ubHkoZW5jb3VudGVycyBMaXN0PEVuY291bnRlcj4pOg0KICBzaW5nbGV0b24gZnJvbSBlbmNvdW50ZXJzDQoNCmRlZmluZSBmdW5jdGlvbiBPbmx5KGltbXVuaXphdGlvbnMgTGlzdDxJbW11bml6YXRpb24+KToNCiAgc2luZ2xldG9uIGZyb20gaW1tdW5pemF0aW9ucw0KDQpkZWZpbmUgZnVuY3Rpb24gT25seShtZWRpY2F0aW9ucmVxdWVzdHMgTGlzdDxNZWRpY2F0aW9uUmVxdWVzdD4pOg0KICBzaW5nbGV0b24gZnJvbSBtZWRpY2F0aW9ucmVxdWVzdHMNCg0KZGVmaW5lIGZ1bmN0aW9uIE9ubHkob2JzZXJ2YXRpb25zIExpc3Q8T2JzZXJ2YXRpb24+KToNCiAgc2luZ2xldG9uIGZyb20gb2JzZXJ2YXRpb25zDQoNCmRlZmluZSBmdW5jdGlvbiBPbmx5KHByb2NlZHVyZXMgTGlzdDxQcm9jZWR1cmU+KToNCiAgc2luZ2xldG9uIGZyb20gcHJvY2VkdXJlcw0KDQpkZWZpbmUgZnVuY3Rpb24gT25seShzZXJ2aWNlUmVxdWVzdHMgTGlzdDxTZXJ2aWNlUmVxdWVzdD4pOg0KICBzaW5nbGV0b24gZnJvbSBzZXJ2aWNlUmVxdWVzdHMNCg0KZGVmaW5lIGZ1bmN0aW9uIE9ubHkoZG9zYWdlcyBMaXN0PERvc2FnZT4pOg0KICBzaW5nbGV0b24gZnJvbSBkb3NhZ2VzDQoNCmRlZmluZSBmdW5jdGlvbiBPbmx5KGRvc2VzIExpc3Q8RkhJUi5Eb3NhZ2UuRG9zZUFuZFJhdGU+KToNCiAgc2luZ2xldG9uIGZyb20gZG9zZXMNCg0KZGVmaW5lIGZ1bmN0aW9uIEVhcmxpZXN0KG9ic2VydmF0aW9ucyBMaXN0PE9ic2VydmF0aW9uPik6DQogIEZpcnN0KA0KICAgIG9ic2VydmF0aW9ucyBPDQogICAgICBzb3J0IGJ5IGlzc3VlZA0KICApDQoNCmRlZmluZSBmdW5jdGlvbiBMYXRlc3Qob2JzZXJ2YXRpb25zIExpc3Q8T2JzZXJ2YXRpb24+KToNCiAgTGFzdCgNCiAgICBvYnNlcnZhdGlvbnMgTw0KICAgICAgc29ydCBieSBpc3N1ZWQNCiAgKQ0KDQpkZWZpbmUgZnVuY3Rpb24gTW9zdFJlY2VudChvYnNlcnZhdGlvbnMgTGlzdDxPYnNlcnZhdGlvbj4pOg0KICBMYXN0KA0KICAgIG9ic2VydmF0aW9ucyBPDQogICAgICBzb3J0IGJ5IGlzc3VlZA0KICApDQoNCmRlZmluZSBmdW5jdGlvbiBNb3N0UmVjZW50KHByb2NlZHVyZXMgTGlzdDxQcm9jZWR1cmU+KToNCiAgTGFzdCgNCiAgICBwcm9jZWR1cmVzIFANCiAgICAgIHNvcnQgYnkgc3RhcnQgb2YgRkMuVG9JbnRlcnZhbChwZXJmb3JtZWQpDQogICAgKQ0KDQpkZWZpbmUgZnVuY3Rpb24gTG93ZXN0KG9ic2VydmF0aW9ucyBMaXN0PE9ic2VydmF0aW9uPik6DQogIEZpcnN0KA0KICAgIG9ic2VydmF0aW9ucyBPDQogICAgICBzb3J0IGJ5ICh2YWx1ZSBhcyBGSElSLlF1YW50aXR5KQ0KICApDQoNCmRlZmluZSBmdW5jdGlvbiBIaWdoZXN0KG9ic2VydmF0aW9ucyBMaXN0PE9ic2VydmF0aW9uPik6DQogIExhc3QoDQogICAgb2JzZXJ2YXRpb25zIE8NCiAgICAgIHNvcnQgYnkgKHZhbHVlIGFzIEZISVIuUXVhbnRpdHkpDQogICkNCg0KLyoNCkBkZXNjcmlwdGlvbjogUmV0dXJucyBhbnkgV0hPIGNvcmUgZXh0ZW5zaW9ucyBkZWZpbmVkIG9uIHRoZSBnaXZlbiByZXNvdXJjZSB3aXRoIHRoZSBzcGVjaWZpZWQgaWQuDQpAY29tbWVudDogTk9URTogRXh0ZW5zaW9ucyBhcmUgbm90IHRoZSBwcmVmZXJyZWQgYXBwcm9hY2gsIGJ1dCBhcmUgdXNlZCBhcyBhIHdheSB0byBhY2Nlc3MNCmNvbnRlbnQgdGhhdCBpcyBkZWZpbmVkIGJ5IGV4dGVuc2lvbnMgYnV0IG5vdCB5ZXQgc3VyZmFjZWQgaW4gdGhlDQpDUUwgbW9kZWwgaW5mby4NCiovDQpkZWZpbmUgZnVuY3Rpb24gRXh0ZW5zaW9ucyhkb21haW5SZXNvdXJjZSBEb21haW5SZXNvdXJjZSwgaWQgU3RyaW5nKToNCiAgZG9tYWluUmVzb3VyY2UuZXh0ZW5zaW9uIEUNCgkgIHdoZXJlIEUudXJsID0gKCdodHRwOi8vZmhpci5vcmcvZ3VpZGVzL3doby9jb3JlL1N0cnVjdHVyZURlZmluaXRpb24vJyArIGlkKQ0KCQlyZXR1cm4gRQ0KDQovKg0KQGRlc2NyaXB0aW9uOiBSZXR1cm5zIHRoZSBzaW5nbGUgV0hPIGNvcmUgZXh0ZW5zaW9uIChpZiBwcmVzZW50KSBvbiB0aGUgZ2l2ZW4gcmVzb3VyY2Ugd2l0aCB0aGUgc3BlY2lmaWVkIGlkLg0KQGNvbW1lbnQ6IFRoaXMgZnVuY3Rpb24gdXNlcyBzaW5nbGV0b24gZnJvbSB0byBlbnN1cmUgdGhhdCBhIHJ1bi10aW1lIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlcmUNCmlzIG1vcmUgdGhhbiBvbmUgZXh0ZW5zaW9uIG9uIHRoZSBnaXZlbiByZXNvdXJjZSB3aXRoIHRoZSBzcGVjaWZpZWQgaWQuDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIEV4dGVuc2lvbihkb21haW5SZXNvdXJjZSBEb21haW5SZXNvdXJjZSwgaWQgU3RyaW5nKToNCiAgc2luZ2xldG9uIGZyb20gIkV4dGVuc2lvbnMiKGRvbWFpblJlc291cmNlLCBpZCkNCg0KLyoNCkBkZXNjcmlwdGlvbjogUmV0dXJucyBhbnkgV0hPIGNvcmUgZXh0ZW5zaW9ucyBkZWZpbmVkIG9uIHRoZSBnaXZlbiBlbGVtZW50IHdpdGggdGhlIHNwZWNpZmllZCBpZC4NCkBjb21tZW50OiBOT1RFOiBFeHRlbnNpb25zIGFyZSBub3QgdGhlIHByZWZlcnJlZCBhcHByb2FjaCwgYnV0IGFyZSB1c2VkIGFzIGEgd2F5IHRvIGFjY2Vzcw0KY29udGVudCB0aGF0IGlzIGRlZmluZWQgYnkgZXh0ZW5zaW9ucyBidXQgbm90IHlldCBzdXJmYWNlZCBpbiB0aGUgQ1FMIG1vZGVsIGluZm8uDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIEV4dGVuc2lvbnMoZWxlbWVudCBFbGVtZW50LCBpZCBTdHJpbmcpOg0KICBlbGVtZW50LmV4dGVuc2lvbiBFDQoJICB3aGVyZSBFLnVybCA9ICgnaHR0cDovL2ZoaXIub3JnL2d1aWRlcy93aG8vY29yZS9TdHJ1Y3R1cmVEZWZpbml0aW9uLycgKyBpZCkNCgkJcmV0dXJuIEUNCg0KLyoNCkBkZXNjcmlwdGlvbjogUmV0dXJucyB0aGUgc2luZ2xlIFdITyBjb3JlIGV4dGVuc2lvbiAoaWYgcHJlc2VudCkgb24gdGhlIGdpdmVuIGVsZW1lbnQgd2l0aCB0aGUgc3BlY2lmaWVkIGlkLg0KQGNvbW1lbnQ6IFRoaXMgZnVuY3Rpb24gdXNlcyBzaW5nbGV0b24gZnJvbSB0byBlbnN1cmUgdGhhdCBhIHJ1bi10aW1lIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlcmUNCmlzIG1vcmUgdGhhbiBvbmUgZXh0ZW5zaW9uIG9uIHRoZSBnaXZlbiByZXNvdXJjZSB3aXRoIHRoZSBzcGVjaWZpZWQgdXJsLg0KKi8NCmRlZmluZSBmdW5jdGlvbiBFeHRlbnNpb24oZWxlbWVudCBFbGVtZW50LCBpZCBTdHJpbmcpOg0KICBzaW5nbGV0b24gZnJvbSBFeHRlbnNpb25zKGVsZW1lbnQsIGlkKQ0KDQovKg0KQGRlc2NyaXB0aW9uOiBSZXR1cm5zIGFueSBXSE8gY29yZSBtb2RpZmllciBleHRlbnNpb25zIGRlZmluZWQgb24gdGhlIGdpdmVuIHJlc291cmNlIHdpdGggdGhlIHNwZWNpZmllZCBpZC4NCkBjb21tZW50OiBOT1RFOiBFeHRlbnNpb25zIGFyZSBub3QgdGhlIHByZWZlcnJlZCBhcHByb2FjaCwgYnV0IGFyZSB1c2VkIGFzIGEgd2F5IHRvIGFjY2Vzcw0KY29udGVudCB0aGF0IGlzIGRlZmluZWQgYnkgZXh0ZW5zaW9ucyBidXQgbm90IHlldCBzdXJmYWNlZCBpbiB0aGUNCkNRTCBtb2RlbCBpbmZvLg0KKi8NCmRlZmluZSBmdW5jdGlvbiBNb2RpZmllckV4dGVuc2lvbnMoZG9tYWluUmVzb3VyY2UgRG9tYWluUmVzb3VyY2UsIGlkIFN0cmluZyk6DQogIGRvbWFpblJlc291cmNlLm1vZGlmaWVyRXh0ZW5zaW9uIEUNCgkgIHdoZXJlIEUudXJsID0gKCdodHRwOi8vZmhpci5vcmcvZ3VpZGVzL3doby9jb3JlL1N0cnVjdHVyZURlZmluaXRpb24vJyArIGlkKQ0KCQlyZXR1cm4gRQ0KDQovKg0KQGRlc2NyaXB0aW9uOiBSZXR1cm5zIHRoZSBzaW5nbGUgV0hPIGNvcmUgbW9kaWZpZXIgZXh0ZW5zaW9uIChpZiBwcmVzZW50KSBvbiB0aGUgZ2l2ZW4gcmVzb3VyY2Ugd2l0aCB0aGUgc3BlY2lmaWVkIGlkLg0KQGNvbW1lbnQ6IFRoaXMgZnVuY3Rpb24gdXNlcyBzaW5nbGV0b24gZnJvbSB0byBlbnN1cmUgdGhhdCBhIHJ1bi10aW1lIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlcmUNCmlzIG1vcmUgdGhhbiBvbmUgZXh0ZW5zaW9uIG9uIHRoZSBnaXZlbiByZXNvdXJjZSB3aXRoIHRoZSBzcGVjaWZpZWQgdXJsLg0KKi8NCmRlZmluZSBmdW5jdGlvbiBNb2RpZmllckV4dGVuc2lvbihkb21haW5SZXNvdXJjZSBEb21haW5SZXNvdXJjZSwgaWQgU3RyaW5nKToNCiAgc2luZ2xldG9uIGZyb20gTW9kaWZpZXJFeHRlbnNpb25zKGRvbWFpblJlc291cmNlLCBpZCkNCg0KLyoNCkBkZXNjcmlwdGlvbjogUmV0dXJucyBhbnkgV0hPIGNvcmUgbW9kaWZpZXIgZXh0ZW5zaW9ucyBkZWZpbmVkIG9uIHRoZSBnaXZlbiBlbGVtZW50IHdpdGggdGhlIHNwZWNpZmllZCBpZC4NCkBjb21tZW50OiBOT1RFOiBFeHRlbnNpb25zIGFyZSBub3QgdGhlIHByZWZlcnJlZCBhcHByb2FjaCwgYnV0IGFyZSB1c2VkIGFzIGEgd2F5IHRvIGFjY2Vzcw0KY29udGVudCB0aGF0IGlzIGRlZmluZWQgYnkgZXh0ZW5zaW9ucyBidXQgbm90IHlldCBzdXJmYWNlZCBpbiB0aGUgQ1FMIG1vZGVsIGluZm8uDQoqLw0KZGVmaW5lIGZ1bmN0aW9uIE1vZGlmaWVyRXh0ZW5zaW9ucyhlbGVtZW50IEJhY2tib25lRWxlbWVudCwgaWQgU3RyaW5nKToNCiAgZWxlbWVudC5tb2RpZmllckV4dGVuc2lvbiBFDQoJICB3aGVyZSBFLnVybCA9ICgnaHR0cDovL2ZoaXIub3JnL2d1aWRlcy93aG8vY29yZS9TdHJ1Y3R1cmVEZWZpbml0aW9uLycgKyBpZCkNCgkJcmV0dXJuIEUNCg0KLyoNCkBkZXNjcmlwdGlvbjogUmV0dXJucyB0aGUgc2luZ2xlIFdITyBjb3JlIG1vZGlmaWVyIGV4dGVuc2lvbiAoaWYgcHJlc2VudCkgb24gdGhlIGdpdmVuIGVsZW1lbnQgd2l0aCB0aGUgc3BlY2lmaWVkIGlkLg0KQGNvbW1lbnQ6IFRoaXMgZnVuY3Rpb24gdXNlcyBzaW5nbGV0b24gZnJvbSB0byBlbnN1cmUgdGhhdCBhIHJ1bi10aW1lIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlcmUNCmlzIG1vcmUgdGhhbiBvbmUgZXh0ZW5zaW9uIG9uIHRoZSBnaXZlbiByZXNvdXJjZSB3aXRoIHRoZSBzcGVjaWZpZWQgdXJsLg0KKi8NCmRlZmluZSBmdW5jdGlvbiBNb2RpZmllckV4dGVuc2lvbihlbGVtZW50IEJhY2tib25lRWxlbWVudCwgaWQgU3RyaW5nKToNCiAgc2luZ2xldG9uIGZyb20gTW9kaWZpZXJFeHRlbnNpb25zKGVsZW1lbnQsIGlkKQ0K"
  },
  {
    "contentType" : "application/elm+json",
    "data" : ""
  }]
}