name: ReleaseBuild

on:
  workflow_call:  # Reusable by other workflows
  workflow_dispatch:  # Manual trigger by user

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repo to ./source
        uses: actions/checkout@v3
        with:
          path: source
          fetch-depth: 0  # Fetch all history for all branches and tags.

      - name: Checkout HL7/fhir-ig-history-template to ./history-template
        uses: actions/checkout@v3
        with:
          repository: HL7/fhir-ig-history-template
          path: history-template

      - name: Checkout WorldHealthOrganization/smart-html to ./webroot
        uses: actions/checkout@v3
        with:
          repository: WorldHealthOrganization/smart-html
          path: webroot
          fetch-depth: 0  # Fetch all history for all branches and tags.

      - name: Checkout FHIR/ig-registry to ./ig-registry
        uses: actions/checkout@v3
        with:
          repository: FHIR/ig-registry
          path: ig-registry

      - name: Setup publisher and install dependencies
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace hl7fhir/ig-publisher-base:latest /bin/sh -c "
            npm install -g fsh-sushi &&
            curl -L https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar -o ./publisher.jar --create-dirs
          "

      - name: Create package cache folder
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace hl7fhir/ig-publisher-base:latest /bin/sh -c "
            mkdir -p ./fhir-package-cache && chown 1001:127 ./fhir-package-cache
          "

      - name: Ensure write permissions for webroot and source directories
        run: |
          chmod -R 777 webroot
          chmod -R 777 source
          chmod -R 777 fhir-package-cache
          
      - name: Run the IG publisher
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace hl7fhir/ig-publisher-base:latest java -Xmx4g -jar ./publisher.jar publisher -ig source -package-cache-folder fhir-package-cache

      - name: Run publisher command for publishing release
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace hl7fhir/ig-publisher-base:latest /bin/sh -c "
            ls -la /workspace/webroot &&
            java -Xmx4g -Dfile.encoding=UTF-8 -jar /workspace/publisher.jar -go-publish -package-cache-folder /workspace/fhir-package-cache -source /workspace/source -web /workspace/webroot -temp /workspace/temp -registry /workspace/ig-registry/fhir-ig-list.json -history /workspace/history-template -templates /workspace/webroot/templates
          "

      - name: Prepare deployment folder (excluding full-ig.zip)
        run: |
          mkdir -p /workspace/deploy &&
          rsync -av --exclude="full-ig.zip" /workspace/webroot/ /workspace/deploy/

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          destination_dir: sitepreview

      - name: Upload release assets (full-ig.zip and package.tgz)
        run: |
          mkdir -p release-assets
          mv /workspace/webroot/full-ig.zip release-assets/
          mv /workspace/output/package.tgz release-assets/

      - name: Upload full-ig.zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets/full-ig.zip
          asset_name: full-ig.zip
          asset_content_type: application/zip

      - name: Upload package.tgz to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets/package.tgz
          asset_name: package.tgz
          asset_content_type: application/gzip
